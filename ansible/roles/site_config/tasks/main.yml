---

# Configure a development environment on the server

- name: Prevent non-ssl and www.
  template: src=nohttp.j2 dest=/etc/nginx/sites-available/nohttp

- name: Enable preventing ssl
  command: ln -s /etc/nginx/sites-available/nohttp /etc/nginx/sites-enabled/nohttp creates=/etc/nginx/sites-enabled/nohttp

- name: Set the server name for our base server.
  tags: frontend
  set_fact:
    server_name_template: "{{ server_name }}"

- name: Create backend
  template: src=iamcarrico.backend.j2 dest=/etc/nginx/sites-available/iamcarrico.backend
  notify: restart nginx

- name: Create frontend
  template: src=iamcarrico.j2 dest=/etc/nginx/sites-available/iamcarrico
  notify: restart nginx
  tags: frontend

- name: Set the server name for secondary server.
  set_fact:
    server_name_template: "{{ ansible_fqdn }}"
  when: direct_site == true
  tags: direct_site

- name: Create directly accesible site.
  template: src=iamcarrico.j2 dest=/etc/nginx/sites-available/{{ ansible_fqdn }}
  when: direct_site == true
  tags: direct_site

- name: Enable directly accessible site.
  file: src=/etc/nginx/sites-available/{{ ansible_fqdn }} dest=/etc/nginx/sites-enabled/{{ ansible_fqdn }} state=link
  notify: restart nginx
  when: direct_site == true
  tags: direct_site

- name: Enable the backend
  file: src=/etc/nginx/sites-available/iamcarrico.backend dest=/etc/nginx/sites-enabled/iamcarrico.backend
  notify: restart nginx

- name: Enable the frontend
  file: src=/etc/nginx/sites-available/iamcarrico dest=/etc/nginx/sites-enabled/iamcarrico
  notify: restart nginx

- name: Create all redirects
  template: src=redirect.j2 dest=/etc/nginx/sites-available/redirect
  notify: restart nginx
  when: redirect_domains is defined
  register: redirects_added
  tags:
     - redirect

- name: Enable redirects
  file: src=/etc/nginx/sites-available/redirect dest=/etc/nginx/sites-enabled/redirect state=link
  notify: restart nginx
  when: redirect_domains is defined
  tags:
     - redirect

- name: Remove sites that we do not want available.
  file: path={{ item }} state=absent
  with_items:
    - /etc/nginx/sites-enabled/selfsigned
    - /etc/nginx/sites-enabled/default
    - /etc/nginx/sites-enabled/nginx_status
  notify: restart nginx
